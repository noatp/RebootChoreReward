___FILEHEADER___

import SwiftUI
import UIKit

class ___VARIABLE_viewName:identifier___VC: UIViewController {
    private var viewModel: ___VARIABLE_viewName:identifier___ViewModel
    private let dependencyView: Dependency.View

    init(
        viewModel: ___VARIABLE_viewName:identifier___ViewModel = .init(),
        dependencyView: Dependency.View
    ) {
        self.viewModel = viewModel
        self.dependencyView = dependencyView
        super.init(nibName: nil, bundle: nil)
    }
    
    required init?(coder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }

    override func viewDidLoad() {
        super.viewDidLoad()
        setUpViews()
        setUpActions()
    }

    private func setUpViews() {

    }

    private func setUpActions() {
        
    }
}

struct ___VARIABLE_viewName:identifier___VC_Previews: PreviewProvider {
    static var previews: some View {
        let viewModel = ___VARIABLE_viewName:identifier___ViewModel()
        UIViewControllerPreviewWrapper {
            UINavigationController(rootViewController: ___VARIABLE_viewName:identifier___VC(viewModel: viewModel))
        }
    }
}
 
extension Dependency.View {
    func ___VARIABLE_viewNameLowerCase:identifier___VC() -> ___VARIABLE_viewName:identifier___VC {
        return ___VARIABLE_viewName:identifier___VC(
            viewModel: viewModel.___VARIABLE_viewNameLowerCase:identifier___ViewModel,
            dependencyView: self
        )
    }
}
